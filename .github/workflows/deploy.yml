name: Terraform Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: terraform-runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Changed Terraform Directory
        id: detect-dir
        run: |
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^terraform/' | cut -d '/' -f2 | sort -u | uniq)
          if [ -z "$CHANGED_DIRS" ]; then
            echo "No Terraform directory changes detected. Skipping..."
            exit 1
          fi
          echo "Detected Terraform directory changes: $CHANGED_DIRS"
          echo "TERRAFORM_DIR=$CHANGED_DIRS" >> $GITHUB_ENV  # Store in environment variable

      - name: Configure AWS-management Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::902712839429:role/aws-actions-github-poc
          aws-region: us-east-1

      - name: Verify Terraform Directory Exists
        run: ls -R terraform/${{ env.TERRAFORM_DIR }}

      - name: Terraform Init
        working-directory: terraform/${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform/${{ env.TERRAFORM_DIR }}
        run: terraform plan

  manual-approval:
    needs: terraform-plan
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Manual Approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_ACTIONS_MANUAL_APPROVAL: "true"

  terraform-apply:
    needs: manual-approval
    runs-on: terraform-runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS-management Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::902712839429:role/aws-actions-github-poc
          aws-region: us-east-1

      - name: Terraform Apply
        working-directory: terraform/${{ needs.terraform-plan.outputs.terraform_dir }}
        run: terraform apply -auto-approve tfplan
